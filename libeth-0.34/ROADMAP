
LibEth Road Map
===============

LibEth development has so far taken place on Unix systems and has been
strictly confined to the limits of ANSI C (hence it should port anywhere).
The LibEth package comes with the basic library and front end utilities
used to both develop (test) and demonstrate the library.


Version Notation
----------------
libeth-0.33a0-1.tar.gz
         |||| |
         |||| |--  Updates to materials in doc/ or tools/
         ||||
         ||||----  Alpha, Beta, Etc Release Level
         |||
         |||-----  Alpha, Beta, Etc
         ||
         ||------  Minor Release
         |
         |-------  Major Release



Development Task List
=====================
The original objectives of the LibEth project (an ANSI C like programming
interface) have been reached some time ago.  New routines can be added as
the need arises, existing subroutines can always be made more efficient.

Routine maintainence of the library includes adding new font encoding
systems and updating existing vendor modules for new typeface names as
they appear (low level work).

Otherwise ongoing work through the end of 0.34 is a progression through
the "Babylon" era of the library.  Meaning work is mainly that of finalizing
the communication (I/O) of the initial supported system.  As well as
reworking the internal representation and handling of Extended Ethiopic
(partially broken in 0.33).

Unless suggestions are made current development will probably follow in an
order similar to the below:


First Public Release of LibEth
------------------------------

libeth-0.33a0.tar.gz    LibEth 0.33 (Sheraro) Introduction Release

libeth-0.33b0.tar.gz    Dehai, Mainz, Qubee Output Added 
                        PowerGe'ez Input/Output Added.
                        SERA, Ed, Ethiop, IES, ISO-TC46-SC2 Output rewritten.

libeth-0.33c0.tar.gz    Dehai, Ed, Ethiop, ISO-TC46-SC2, Mainze, Qubee
                        Input added.

libeth-0.33d0.tar.gz    SERA 2000 (configurable ticks) added.

libeth-0.33e0.tar.gz    EthCITA systems (when docs are available).

libeth-0.33.tar.gz      Bugs are gone, LibEth 0.33 Final Release made.


Work on Waldiya Release Begins
------------------------------

libeth-0.34a0.tar.gz    LibEth 0.34 Introduction Release.
                        Java, Clike, ZeroX, Uplus, UName and debug become
                        transfer variants that are OR-able with the "UPPERCASE"
                        variant.

libeth-0.34c0.tar.gz    Dehai, Ed, Ethiop, ISO-TC46-SC2, Mainze, Qubee
                        Input added.

libeth-0.34b0.tar.gz    System modules are overhauled for Extended Ethiopic
                        as per n1846 and the current private use range is
                        relocated to the Unicode 1.1+ private use range.
                        Rework set/get form number for Extended Ethiopic to
                        be locale aware.

libeth-0.34b2.tar.gz    Reconsider use of "UniToMod" table in include/fidel.map.
                        Add routines for sorting schemes (Traditional, Desta
                        T/Wolde, etc).

libeth-0.34.tar.gz      Bugs are gone, LibEth 0.34 Final Release made.
                        Exit Babylon...



Things to add along the way
---------------------------
  Still need to add GeezFont's old-old system.
  Add more holidays to calendar codes.
  Add AM/PM to calendar codes.
  Add more fonts as they come.
  Reported bugs...


There are probably numerous areas where LibEth could be improved for
processing and memory efficiency.  Lessons could be learned from studying
the techniques used in GNU "recode" and other code converters.

After 0.34 the next area of LibEth to be developed will be for resources
needed for word generation and stemming.



Project Horizon
===============
These are some suggested projects that could be undertaken by interested
parties:


Other nifty things that could be done:

  o  Smart Configure Script
     -an autoconfig "configure" script will soon be essential, modified
      to set conditional compile defines for the various font systems.

  o  Windows File Conversion Tool
     -a VB front end that could convert the font character codes in a Word
      or RTF file.  This service could be hooked up to an existing
      word processing type application.

  o  Port the whole thing to an object language
     -would be practical but consume a bit of time.  C++ wrappers might
      be tried first to bang out the new APIs.

  o  Hook v0.34 up to a Search Engine
     -the string matching tools in v0.34 should be pretty strong and
      a search engine would be a great test of the routines.

  o  "ecal" analog to Gregroian Unix "cal"
     -cute, side by side Ethiopian - Gregorian months would be great.

  o  An Ethiopic Regular Expressions Library
     -could apply LibEth.

  o  Tk GUI for Existing Web Preparation Scripts
     -just waiting for O'Reilly's "Learning Perl/Tk" book to come out...
